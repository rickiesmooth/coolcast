# THIS FILE HAS BEEN AUTO-GENERATED BY "PRISMA DEPLOY"
# DO NOT EDIT THIS FILE DIRECTLY

#
# Model Types
#

type Episode implements Node {
  id: ID!
  title: String!
  date: DateTime!
  description: String!
  src: String!
  show(where: ShowWhereInput, orderBy: ShowOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Show!]
}

type Show implements Node {
  id: ID!
  title: String!
  showId: String!
  thumbLarge: String!
  episodes(where: EpisodeWhereInput, orderBy: EpisodeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Episode!]
}

type User implements Node {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  facebookUserId: String!
  email: String!
}


#
# Other Types
#

type AggregateEpisode {
  count: Int!
}

type AggregateShow {
  count: Int!
}

type AggregateUser {
  count: Int!
}

type BatchPayload {
  count: Long!
}

scalar DateTime

type EpisodeConnection {
  pageInfo: PageInfo!
  edges: [EpisodeEdge]!
  aggregate: AggregateEpisode!
}

input EpisodeCreateInput {
  title: String!
  date: DateTime!
  description: String!
  src: String!
  show: ShowCreateManyWithoutEpisodesInput
}

input EpisodeCreateManyWithoutShowInput {
  create: [EpisodeCreateWithoutShowInput!]
  connect: [EpisodeWhereUniqueInput!]
}

input EpisodeCreateWithoutShowInput {
  title: String!
  date: DateTime!
  description: String!
  src: String!
}

type EpisodeEdge {
  node: Episode!
  cursor: String!
}

enum EpisodeOrderByInput {
  id_ASC
  id_DESC
  title_ASC
  title_DESC
  date_ASC
  date_DESC
  description_ASC
  description_DESC
  src_ASC
  src_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
}

type EpisodePreviousValues {
  id: ID!
  title: String!
  date: DateTime!
  description: String!
  src: String!
}

type EpisodeSubscriptionPayload {
  mutation: MutationType!
  node: Episode
  updatedFields: [String!]
  previousValues: EpisodePreviousValues
}

input EpisodeSubscriptionWhereInput {
  AND: [EpisodeSubscriptionWhereInput!]
  OR: [EpisodeSubscriptionWhereInput!]
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: EpisodeWhereInput
}

input EpisodeUpdateInput {
  title: String
  date: DateTime
  description: String
  src: String
  show: ShowUpdateManyWithoutEpisodesInput
}

input EpisodeUpdateManyWithoutShowInput {
  create: [EpisodeCreateWithoutShowInput!]
  connect: [EpisodeWhereUniqueInput!]
  disconnect: [EpisodeWhereUniqueInput!]
  delete: [EpisodeWhereUniqueInput!]
  update: [EpisodeUpdateWithoutShowInput!]
  upsert: [EpisodeUpsertWithoutShowInput!]
}

input EpisodeUpdateWithoutShowDataInput {
  title: String
  date: DateTime
  description: String
  src: String
}

input EpisodeUpdateWithoutShowInput {
  where: EpisodeWhereUniqueInput!
  data: EpisodeUpdateWithoutShowDataInput!
}

input EpisodeUpsertWithoutShowInput {
  where: EpisodeWhereUniqueInput!
  update: EpisodeUpdateWithoutShowDataInput!
  create: EpisodeCreateWithoutShowInput!
}

input EpisodeWhereInput {
  AND: [EpisodeWhereInput!]
  OR: [EpisodeWhereInput!]
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  title: String
  title_not: String
  title_in: [String!]
  title_not_in: [String!]
  title_lt: String
  title_lte: String
  title_gt: String
  title_gte: String
  title_contains: String
  title_not_contains: String
  title_starts_with: String
  title_not_starts_with: String
  title_ends_with: String
  title_not_ends_with: String
  date: DateTime
  date_not: DateTime
  date_in: [DateTime!]
  date_not_in: [DateTime!]
  date_lt: DateTime
  date_lte: DateTime
  date_gt: DateTime
  date_gte: DateTime
  description: String
  description_not: String
  description_in: [String!]
  description_not_in: [String!]
  description_lt: String
  description_lte: String
  description_gt: String
  description_gte: String
  description_contains: String
  description_not_contains: String
  description_starts_with: String
  description_not_starts_with: String
  description_ends_with: String
  description_not_ends_with: String
  src: String
  src_not: String
  src_in: [String!]
  src_not_in: [String!]
  src_lt: String
  src_lte: String
  src_gt: String
  src_gte: String
  src_contains: String
  src_not_contains: String
  src_starts_with: String
  src_not_starts_with: String
  src_ends_with: String
  src_not_ends_with: String
  show_every: ShowWhereInput
  show_some: ShowWhereInput
  show_none: ShowWhereInput
}

input EpisodeWhereUniqueInput {
  id: ID
}

scalar Long

type Mutation {
  createUser(data: UserCreateInput!): User!
  createShow(data: ShowCreateInput!): Show!
  createEpisode(data: EpisodeCreateInput!): Episode!
  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User
  updateShow(data: ShowUpdateInput!, where: ShowWhereUniqueInput!): Show
  updateEpisode(data: EpisodeUpdateInput!, where: EpisodeWhereUniqueInput!): Episode
  deleteUser(where: UserWhereUniqueInput!): User
  deleteShow(where: ShowWhereUniqueInput!): Show
  deleteEpisode(where: EpisodeWhereUniqueInput!): Episode
  upsertUser(where: UserWhereUniqueInput!, create: UserCreateInput!, update: UserUpdateInput!): User!
  upsertShow(where: ShowWhereUniqueInput!, create: ShowCreateInput!, update: ShowUpdateInput!): Show!
  upsertEpisode(where: EpisodeWhereUniqueInput!, create: EpisodeCreateInput!, update: EpisodeUpdateInput!): Episode!
  updateManyUsers(data: UserUpdateInput!, where: UserWhereInput!): BatchPayload!
  updateManyShows(data: ShowUpdateInput!, where: ShowWhereInput!): BatchPayload!
  updateManyEpisodes(data: EpisodeUpdateInput!, where: EpisodeWhereInput!): BatchPayload!
  deleteManyUsers(where: UserWhereInput!): BatchPayload!
  deleteManyShows(where: ShowWhereInput!): BatchPayload!
  deleteManyEpisodes(where: EpisodeWhereInput!): BatchPayload!
}

enum MutationType {
  CREATED
  UPDATED
  DELETED
}

interface Node {
  id: ID!
}

type PageInfo {
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
  endCursor: String
}

type Query {
  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User]!
  shows(where: ShowWhereInput, orderBy: ShowOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Show]!
  episodes(where: EpisodeWhereInput, orderBy: EpisodeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Episode]!
  user(where: UserWhereUniqueInput!): User
  show(where: ShowWhereUniqueInput!): Show
  episode(where: EpisodeWhereUniqueInput!): Episode
  usersConnection(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UserConnection!
  showsConnection(where: ShowWhereInput, orderBy: ShowOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ShowConnection!
  episodesConnection(where: EpisodeWhereInput, orderBy: EpisodeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): EpisodeConnection!
  node(id: ID!): Node
}

type ShowConnection {
  pageInfo: PageInfo!
  edges: [ShowEdge]!
  aggregate: AggregateShow!
}

input ShowCreateInput {
  title: String!
  showId: String!
  thumbLarge: String!
  episodes: EpisodeCreateManyWithoutShowInput
}

input ShowCreateManyWithoutEpisodesInput {
  create: [ShowCreateWithoutEpisodesInput!]
  connect: [ShowWhereUniqueInput!]
}

input ShowCreateWithoutEpisodesInput {
  title: String!
  showId: String!
  thumbLarge: String!
}

type ShowEdge {
  node: Show!
  cursor: String!
}

enum ShowOrderByInput {
  id_ASC
  id_DESC
  title_ASC
  title_DESC
  showId_ASC
  showId_DESC
  thumbLarge_ASC
  thumbLarge_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
}

type ShowPreviousValues {
  id: ID!
  title: String!
  showId: String!
  thumbLarge: String!
}

type ShowSubscriptionPayload {
  mutation: MutationType!
  node: Show
  updatedFields: [String!]
  previousValues: ShowPreviousValues
}

input ShowSubscriptionWhereInput {
  AND: [ShowSubscriptionWhereInput!]
  OR: [ShowSubscriptionWhereInput!]
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ShowWhereInput
}

input ShowUpdateInput {
  title: String
  showId: String
  thumbLarge: String
  episodes: EpisodeUpdateManyWithoutShowInput
}

input ShowUpdateManyWithoutEpisodesInput {
  create: [ShowCreateWithoutEpisodesInput!]
  connect: [ShowWhereUniqueInput!]
  disconnect: [ShowWhereUniqueInput!]
  delete: [ShowWhereUniqueInput!]
  update: [ShowUpdateWithoutEpisodesInput!]
  upsert: [ShowUpsertWithoutEpisodesInput!]
}

input ShowUpdateWithoutEpisodesDataInput {
  title: String
  showId: String
  thumbLarge: String
}

input ShowUpdateWithoutEpisodesInput {
  where: ShowWhereUniqueInput!
  data: ShowUpdateWithoutEpisodesDataInput!
}

input ShowUpsertWithoutEpisodesInput {
  where: ShowWhereUniqueInput!
  update: ShowUpdateWithoutEpisodesDataInput!
  create: ShowCreateWithoutEpisodesInput!
}

input ShowWhereInput {
  AND: [ShowWhereInput!]
  OR: [ShowWhereInput!]
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  title: String
  title_not: String
  title_in: [String!]
  title_not_in: [String!]
  title_lt: String
  title_lte: String
  title_gt: String
  title_gte: String
  title_contains: String
  title_not_contains: String
  title_starts_with: String
  title_not_starts_with: String
  title_ends_with: String
  title_not_ends_with: String
  showId: String
  showId_not: String
  showId_in: [String!]
  showId_not_in: [String!]
  showId_lt: String
  showId_lte: String
  showId_gt: String
  showId_gte: String
  showId_contains: String
  showId_not_contains: String
  showId_starts_with: String
  showId_not_starts_with: String
  showId_ends_with: String
  showId_not_ends_with: String
  thumbLarge: String
  thumbLarge_not: String
  thumbLarge_in: [String!]
  thumbLarge_not_in: [String!]
  thumbLarge_lt: String
  thumbLarge_lte: String
  thumbLarge_gt: String
  thumbLarge_gte: String
  thumbLarge_contains: String
  thumbLarge_not_contains: String
  thumbLarge_starts_with: String
  thumbLarge_not_starts_with: String
  thumbLarge_ends_with: String
  thumbLarge_not_ends_with: String
  episodes_every: EpisodeWhereInput
  episodes_some: EpisodeWhereInput
  episodes_none: EpisodeWhereInput
}

input ShowWhereUniqueInput {
  id: ID
  showId: String
}

type Subscription {
  user(where: UserSubscriptionWhereInput): UserSubscriptionPayload
  show(where: ShowSubscriptionWhereInput): ShowSubscriptionPayload
  episode(where: EpisodeSubscriptionWhereInput): EpisodeSubscriptionPayload
}

type UserConnection {
  pageInfo: PageInfo!
  edges: [UserEdge]!
  aggregate: AggregateUser!
}

input UserCreateInput {
  facebookUserId: String!
  email: String!
}

type UserEdge {
  node: User!
  cursor: String!
}

enum UserOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  facebookUserId_ASC
  facebookUserId_DESC
  email_ASC
  email_DESC
}

type UserPreviousValues {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  facebookUserId: String!
  email: String!
}

type UserSubscriptionPayload {
  mutation: MutationType!
  node: User
  updatedFields: [String!]
  previousValues: UserPreviousValues
}

input UserSubscriptionWhereInput {
  AND: [UserSubscriptionWhereInput!]
  OR: [UserSubscriptionWhereInput!]
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: UserWhereInput
}

input UserUpdateInput {
  facebookUserId: String
  email: String
}

input UserWhereInput {
  AND: [UserWhereInput!]
  OR: [UserWhereInput!]
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  facebookUserId: String
  facebookUserId_not: String
  facebookUserId_in: [String!]
  facebookUserId_not_in: [String!]
  facebookUserId_lt: String
  facebookUserId_lte: String
  facebookUserId_gt: String
  facebookUserId_gte: String
  facebookUserId_contains: String
  facebookUserId_not_contains: String
  facebookUserId_starts_with: String
  facebookUserId_not_starts_with: String
  facebookUserId_ends_with: String
  facebookUserId_not_ends_with: String
  email: String
  email_not: String
  email_in: [String!]
  email_not_in: [String!]
  email_lt: String
  email_lte: String
  email_gt: String
  email_gte: String
  email_contains: String
  email_not_contains: String
  email_starts_with: String
  email_not_starts_with: String
  email_ends_with: String
  email_not_ends_with: String
}

input UserWhereUniqueInput {
  id: ID
  facebookUserId: String
}
